<launch>

  <arg name="name"                default="$(env UAV_NAMESPACE)"/>
  <arg name="tf_prefix"           default="$(arg name)"/>
	<arg name="x"                   default="0.0"/>
	<arg name="y"                   default="0.0"/>
	<arg name="z"                   default="0.5"/>
  <arg name="enable_ground_truth" default="true"/>
	<arg name="model"               default="$(find ardupilot_gazebo)/models/kopterworx/urdf/kopterworx.urdf.xacro" />
	<arg name="world"               default="worlds/empty.world"/>
	<arg name="fdm_port_in"         default="9002"/>
	<arg name="fdm_port_out"        default="9003"/>
	<arg name="use_sim_time"        default="true"/>
	<arg name="gui"                 default="true"/>
  <arg name="remap_gazebo_tf"     default="false"/>

  <!-- Velodyne properties - requires velodyne_simulator -->
  <arg name="enable_velodyne"           default="false" />
  <arg name="enable_rotating_velodyne"  default="false"/>
  <arg name="laser_count"               default="16"/>
  <arg name="max_range"                 default="50"/>

  <!-- Magnet properties - requires storm_gazebo_ros_magnet-->
  <arg name="enable_magnet"   default="false" />

  <!-- Robot manipulator properties -->
  <arg name="enable_manipulator" default="false" />
  <arg name="enable_asap_manipulator" default="true" />

  <include file="$(find ardupilot_gazebo)/launch/empty_world.launch">
    <arg name="paused"          value="false" />
    <arg name="use_sim_time"    value="$(arg use_sim_time)"/>
    <arg name="verbose"         value="true" />
		<arg name="world_name"      value="$(arg world)" />
		<arg name="gui"             value="$(arg gui)"/>
    <arg name="remap_gazebo_tf" value="$(arg remap_gazebo_tf)"/>
  </include>

  <!-- send the robot XML to param server -->
	<param name="$(arg name)/robot_description" command="
	  $(find xacro)/xacro --inorder $(arg model)
		namespace:=$(arg name)
		enable_velodyne:=$(arg enable_velodyne)
		enable_rotating_velodyne:=$(arg enable_rotating_velodyne)
        enable_magnet:=$(arg enable_magnet)
		enable_manipulator:=$(arg enable_manipulator)
		enable_asap_manipulator:=$(arg enable_asap_manipulator)
		fdm_port_in:=$(arg fdm_port_in)
		fdm_port_out:=$(arg fdm_port_out)
		max_range:=$(arg max_range)
    laser_count:=$(arg laser_count)
	  "
	/>

	<node name="robot_state_publisher" pkg="robot_state_publisher"
    type="robot_state_publisher" ns="$(arg name)"/>
	
	<!-- push robot_description to factory and spawn robot in gazebo -->
	<node name="spawn_robot" pkg="gazebo_ros" type="spawn_model"
	 args="-param $(arg name)/robot_description
	       -urdf
	       -x $(arg x)
	       -y $(arg y)
	       -z $(arg z)
	       -model $(arg name)"
	 respawn="false" output="screen" >
	</node>

  <!-- Start the rotating velodyne controller -->
  <group if="$(arg enable_rotating_velodyne)">
    <include file="$(find velodyne_gazebo_plugins)/launch/velodyne_controller.launch">
			<arg name="namespace" value="$(env UAV_NAMESPACE)"/>
		</include>
  </group>

  <group if="$(arg enable_manipulator)">
    <rosparam ns="/red/wp_manipulator" file="$(find ardupilot_gazebo)/config/arm_controllers.yaml"/>

    <node ns = "/red/wp_manipulator" name="controller_spawner" pkg="controller_manager" type="spawner"
      args="joint_state_controller joint1_position_controller joint2_position_controller
            joint3_position_controller joint4_position_controller joint5_position_controller" 
      respawn="false" output="screen">
    </node>
  
  </group>

  <group if="$(arg enable_asap_manipulator)">
	<rosparam ns="/red/manipulator" file="$(find ardupilot_gazebo)/config/arm_controllers.yaml"/>

	<node ns="/red/manipulator" name="controller_spawner" pkg="controller_manager" type="spawner"
		args="joint_state_controller joint1_velocity_controller joint2_velocity_controller 
		  joint3_velocity_controller joint4_velocity_controller"
		respawn="false" output="screen">
	</node>

	<!--include file="$(find aerial_manipulators_control)/launch/asap_manipulator_4r_reversed_control.launch"/-->

  </group>

</launch>
